<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>agentville.games.wumpus</groupId>
  <artifactId>wumpus-hunter-simple</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>Ein JADE Agent</name>
  <url>http://agentville.wordpress.com</url>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  
  <repositories>
    <repository>
      <id>tilab</id>
      <url>http://jade.tilab.com/maven/</url>
    </repository>
  </repositories>
  
  <dependencies> 
    <dependency> 
      <groupId>com.tilab.jade</groupId>
      <artifactId>jade</artifactId>
      <version>4.3.1</version> 
      <scope>compile</scope>
    </dependency>
    <dependency> 
      <groupId>com.tilab.jade</groupId>
      <artifactId>jade-misc</artifactId>
      <version>2.5.0</version> 
      <scope>compile</scope>
    </dependency>    
    <dependency> 
      <groupId>com.tilab.jade</groupId>
      <artifactId>jade-test-suite</artifactId>
      <version>1.11.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>${pom.groupId}</groupId>
      <artifactId>wumpus-world</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>        
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.8</version>
        </plugin>
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <!-- copy-dependency plugin -->
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <versionRange>[1.8,)</versionRange>
                    <goals>
                      <goal>regex-property</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <id>regex-property</id>
            <goals>
              <goal>regex-property</goal>
            </goals>
            <configuration>
              <name>project.group_Id</name>
              <value>${project.groupId}</value>
              <regex>[\.]</regex>
              <replacement>_</replacement>
              <failIfNoMatch>false</failIfNoMatch>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <archive>
            <!-- Erweitert das default-Manifest: -->
            <manifest>
              <mainClass>${project.groupId}.AgentStarter</mainClass>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
          </archive>
        </configuration>
        <executions>
          <!-- Hier wird ein zusätzliches JAR erzeugt, das den Konventionen von
          JADE entspricht und so auch ohne Main-Methode ausgeführt oder über den
          RMA in einen schon laufenden Container importiert werden kann. -->
          <execution>
            <id>jade-agent</id>
            <goals><goal>jar</goal></goals>
            <phase>package</phase>
            <configuration>
              <finalName>${project.group_Id}_MyAgent</finalName>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.9.1</version>
        <configuration>
          <show>private</show>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <phase>site</phase>
            <goals>
              <goal>aggregate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
<!--       <plugin> -->
<!--         <artifactId>maven-surefire-plugin</artifactId> -->
<!--         <configuration> -->
<!--            <systemProperties> -->
<!--              <property>  -->
<!--                <name>java.util.logging.config.file</name> -->
<!--                <value>src/main/resources/myLogging.properties</value> -->
<!--              </property> -->
<!--              <property> -->
<!--          <name>testlog.dir</name> -->
<!--          <value>${project.build.directory}</value> -->
<!--        </property> -->
<!--            </systemProperties> -->
<!--         </configuration> -->
<!--       </plugin> -->
      
        <plugin>
          <!-- Erzeugt die Javadocs und ein entsprechendes JAR.
          Ausführen mit "mvn javadoc:jar"
          Für dieses Plugin muss Eclipse mit dem JDK konfiguriert
          sein, das dem SDK beiliegt!!! -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.9.1</version>
          <configuration>
            <!-- ... -->
          </configuration>
        </plugin>
        <plugin>
          <!-- Erzeugt ein JAR mit den Sourcen.
          Ausführen mit "mvn source:jar" -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.2.1</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <phase>verify</phase>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>      
    </plugins>
  </build>
</project>